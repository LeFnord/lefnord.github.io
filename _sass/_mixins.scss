// UTILITY MIXINS
// --------------------------------------------------
// Webkit-style focus
// --------------------
@mixin tab-focus() {
  // Default
  outline: thin dotted #333;
  // Webkit
  outline: 5px auto -webkit-focus-ring-color;
  outline-offset: -2px;
}
// Center-align a block level element
// ----------------------------------
@mixin center-block() {
  display: block;
  margin-left: auto;
  margin-right: auto;
}
@mixin text-overflow() {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
// MIXINS
// --------------------------------------------------

%tab-focus {
  // Default
  outline: thin dotted #333;
  // Webkit
  outline: 5px auto -webkit-focus-ring-color;
  outline-offset: -2px;
}
//  Typography
// --------------------------------------------------

@mixin font-size($size, $margin: yes, $line-height: $doc-line-height) {
  // generates the font-size in REMs with a PX fallback
  font-size: 0 + $size;
  font-size: 0 + $size / $doc-font-size;
  // line-height functions
  @if $line-height != $doc-line-height and $line-height != 1 {
    line-height: ceil($size / $line-height) * ($line-height / $size);
  }
  // if $line-height == 1
  // because, typing 1 is quicker than 16
  @else if $line-height == 1 {
    line-height: 1;
  }
  // normal $line-height
  // if the line-height is left.
  @else {
    line-height: ceil($size / $doc-line-height) * ($doc-line-height / $size);
  }
  // margin-bottom functions
  //////////////////////////
  // if no is bottom margin is required
  @if $margin == no {
    margin-bottom: 0;
  }
  // if a specific bottom margin is required
  @else if $margin != yes and $margin != no {
    margin-bottom: 0 + $margin;
    margin-bottom: 0 + ($margin / $doc-font-size);
  }
  // if you're keeping the vertical rhythm with the margin
  @else {
    margin-bottom: 0 + $doc-line-height;
    margin-bottom: 0 + ($doc-line-height / $doc-font-size);
  }
}
// ROUND CORNERS
// --------------------------------------------------
// @include rounded(VALUE);
@mixin rounded($radius:4px) {
  border-radius: $radius;
}
// @include border-radius(VALUE,VALUE,VALUE,VALUE);
@mixin border-radius($topright: 0, $bottomright: 0, $bottomleft: 0, $topleft: 0) {
  border-top-right-radius: $topright;
  border-bottom-right-radius: $bottomright;
  border-bottom-left-radius: $bottomleft;
  border-top-left-radius: $topleft;
  background-clip: padding-box;
}
// @include box-shadow(HORIZONTAL VERTICAL BLUR COLOR))
@mixin box-shadow($shadow: 0 1px 3px rgba(0,0,0,.25)) {
  box-shadow: $shadow;
}

// @include text-shadow();
@mixin text-shadow($shadow: 0 2px 3px rgba(0,0,0,.25)) {
  text-shadow: $shadow;
}
// @include opacity(VALUE);
@mixin opacity($opacity : .5) {
  opacity: $opacity;
}
// For image replacement
@mixin hide-text() {
  text-indent: 100%;
  white-space: nowrap;
  overflow: hidden;
}
// Hide from visual and speaking browsers
@mixin hidden() {
  display: none !important;
  visibility: hidden;
}

.hidden {
  display: none;
  visibility: hidden;
}
// Hide but maintain layout
@mixin invisible() {
  visibility: hidden;
}
// @include resize(VALUE) (none, both, horizontal, vertical, inherit)
@mixin resize($direction: both) {
  resize: $direction;
  overflow: auto;
}
// @include userselect(VALUE) (all, element, none, text)
@mixin user-select($select) {
  user-select: $select;
}
// Hidden but available to speaking browsers
@mixin visuallyhidden() {
  overflow: hidden;
  position: absolute;
  clip: rect(0 0 0 0);
  height: 1px;
  width: 1px;
  margin: -1px;
  padding: 0;
  border: 0;
}
