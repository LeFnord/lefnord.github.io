/* ==========================================================================
   Animations
   ========================================================================== */

/* add .animated class to elements you wish to animate
 * along with the type of animation (eg: <div class="animated fadeIn"></div>)
 */

.animated {
  -webkit-animation-fill-mode:both;
  -moz-animation-fill-mode:both;
  -ms-animation-fill-mode:both;
  -o-animation-fill-mode:both;animation-fill-mode:both;
  -webkit-animation-duration:1s;
  -moz-animation-duration:1s;
  -ms-animation-duration:1s;
  -o-animation-duration:1s;
  animation-duration:1s;
}
.animated.hinge {
  -webkit-animation-duration:2s;
  -moz-animation-duration:2s;
  -ms-animation-duration:2s;
  -o-animation-duration:2s;
  animation-duration:2s;
}

@keyframes fadeIn {
  0% {opacity: 0;}
  100% {opacity: 1;}
}

.fadeIn {
  animation-name: fadeIn;
}

@keyframes fadeInDown {
  0% {
    opacity: 0;
    transform: translateY(-20px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

.fadeInDown {
  animation-name: fadeInDown;
}

$steps: 100;
$delta: 1%;

@keyframes flyIn {
  @for $i from 0 through $steps {
    $current-frame: ($i * $delta);
    $next-frame: (($i + 1) * $delta);

    $bluring: ($steps - 4.2 * $i) / 3 - 1px;
    $x: $i * $delta / 2.5 + $i - 1.5 * $steps;
    $y: -(($i - $steps) * $delta / 2);
    #{$current-frame, $next-frame} {
      transform: perspective($steps + 1px) scale3d(2, 0.8, 0.7) translate3d($x, $y, $i);
      filter: blur($bluring);
      opacity: (($i - 1) * 3) / 100;
    }
  }
}

.flyIn {
  animation-name: flyIn;
}
